- pipeline: '[trident-production-0] Deploy to production live'
  trigger_mode: 'ON_EVERY_PUSH'
  ref_name: '(refs/tags/v\d{0,3}\.\d{0,3}\.\d{0,3}$)' # Any tag without pre-release identifiers (e.g., rc, beta)
  ref_type: 'WILDCARD'
  fetch_all_refs: true
  trigger_condition: 'ALWAYS'
  actions:
    - action: 'Prepare env variables'
      type: 'BUILD'
      working_directory: '/buddy/nodesampleapp'
      region: 'ap-southeast-1'
      docker_image_name: 'xendit/alpine'
      docker_image_tag: '1.0'
      execute_commands:
        - 'set -e'
        - 'export COMMIT_DATE="$(LC_TIME="C" TZ="Asia/Jakarta" date +''%y.%m.%d-%H.%M'' --date="$(git show ${BUDDY_EXECUTION_REVISION} --format=%cd --date=iso | head -n 1)")"'
        - 'export RELEASE_TAG="${BUDDY_EXECUTION_REVISION_SHORT}-${COMMIT_DATE}"'
        - 'export COMMIT_MESSAGE=$(git log -1 --pretty=oneline --abbrev-commit --format="%B" | head -n 1 | sed "s/,/\\\,/g;")'
        - 'export CHANGE_CAUSE="${RELEASE_TAG} - ${COMMIT_MESSAGE}"'
      volume_mappings:
        - '/:/buddy/nodesampleapp'
      trigger_condition: 'ALWAYS'
      shell: 'BASH'
      integration_hash: '5e85761fc5f225000f97dd99'
    - action: 'Build Docker image'
      type: 'DOCKERFILE'
      region: 'ap-southeast-1'
      docker_image_tag: '$RELEASE_TAG'
      dockerfile_path: 'Dockerfile'
      repository: 'xendit/nodesampleapp'
      build_args:
        - 'GITHUB_TOKEN=$GITHUB_TOKEN'
        - 'NPM_TOKEN=$NPM_TOKEN'
      trigger_condition: 'ALWAYS'
      integration_hash: '5e85761fc5f225000f97dd99'
    - action: 'Provision service dependencies using Terraform'
      type: 'AWS_CLI'
      region: 'ap-southeast-1'
      execute_commands:
        - 'bash .buddy/scripts/run_terraform.sh'
      trigger_condition: 'ALWAYS'
      integration_hash: '5e85761fc5f225000f97dd99'
    - action: 'Render k8s manifest from Helm chart'
      type: 'HELM'
      helm_repository_region: 'ap-southeast-1'
      helm_repository_integration:
        hash_id: '5e85761fc5f225000f97dd99'
      setup_commands:
        - 'helm plugin install https://github.com/hypnoglow/helm-s3.git --version 0.9.2'
      execute_commands:
        - bash .buddy/scripts/apply_helm.sh --version 1.5.4
      trigger_condition: 'ALWAYS'
      kubectl_version: 'v1.14.3'
      helm_version: 'v3.1.2'
    - action: 'Apply k8s manifests'
      type: 'KUBERNETES_CLI'
      execute_commands:
        - 'kubectl apply --dry-run -f k8s.yaml | grep "deployment.apps" | awk ''/[a-zA-Z]/ {print $1}'' > deployment.txt'
        - 'kubectl apply -f k8s.yaml'
        - ''
        - 'while read deploy; do'
        - '    kubectl rollout status $deploy -n xenoss-$MODE'
        - 'done < deployment.txt'
        - ''
        - 'rm deployment.txt'
      trigger_condition: 'ALWAYS'
      auth_type: 'TOKEN'
      server: 'https://27CB2CF68E47037203CA97742F163459.sk1.ap-southeast-1.eks.amazonaws.com'
      kubectl_version: 'v1.14.3'
      token: '${SG_PROD_LIVE_DEPLOYER_TOKEN}'
    - action: 'Sentry track release'
      type: 'SENTRY'
      environment: 'production'
      organization_slug: 'xendit-inc'
      organization_name: 'Xendit Inc'
      version: '$BUDDY_EXECUTION_REVISION'
      release_url: '$BUDDY_EXECUTION_URL'
      deploy_url: '$BUDDY_EXECUTION_URL'
      repository: '$BUDDY_REPO_SLUG'
      projects:
        - 'nodesampleapp'
      trigger_condition: 'ALWAYS'
      ignore_errors: 'true'
      integration_hash: '5f2a0d7ec827617fc828a061'
  variables:
    - key: 'CHANGE_CAUSE'
      value: ''
      id: 401
      settable: true
      description: ''
    - key: 'ENVIRONMENT'
      value: 'production'
      id: 402
      description: ''
    - key: 'MODE'
      value: 'live'
      id: 403
      description: ''
    - key: 'RELEASE_TAG'
      value: ''
      id: 404
      settable: true
      description: ''
    - key: 'AWS_DEPLOY_REGION'
      value: 'ap-southeast-1'
