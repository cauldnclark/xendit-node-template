- pipeline: 'Build and test on every commit'
  trigger_mode: 'ON_EVERY_PUSH'
  ref_name: '((refs/pull/\d+)|(master))'
  ref_type: 'WILDCARD'
  trigger_condition: 'ALWAYS'
  auto_clear_cache: true
  actions:
    - action: 'Execute: npm run lint, npm test, npm run build'
      type: 'BUILD'
      working_directory: '/buddy/nodesampleapp'
      docker_image_name: 'library/node'
      docker_image_tag: '12.18.3'
      execute_commands:
        - 'cp .npmrc.example .npmrc'
        - 'echo -ne "\n//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc'
        - 'npm install'
        - 'npm run lint'
        - 'npm run format:check'
        - 'npm test'
        - 'npm run build'
        - 'rm -f .npmrc'
      variables:
        - key: PGPORT
          value: '5432'
        - key: PGHOST
          value: postgres
        - key: PGPASSWORD
          value: test
        - key: PGDATABASE
          value: test
      services:
        - type: 'POSTGRE_SQL'
          version: '10.7'
          connection:
            host: 'postgres'
            port: 5432
            user: 'test'
            password: 'test'
            db: 'test'
      volume_mappings:
        - '/:/buddy/nodesampleapp'
      trigger_condition: 'ALWAYS'
      shell: 'BASH'
    - action: 'Build Docker image'
      type: 'DOCKERFILE'
      region: 'ap-southeast-1'
      dockerfile_path: 'Dockerfile'
      build_args:
        - 'NPM_TOKEN=$NPM_TOKEN'
      trigger_condition: 'ALWAYS'
      integration_hash: '5e85761fc5f225000f97dd99'
- pipeline: 'Static Application Security Testing'
  trigger_mode: ON_EVERY_PUSH
  ref_name: refs/pull/*
  ref_type: WILDCARD
  auto_clear_cache: true
  fetch_all_ref: true
  trigger_condition: ALWAYS
  actions:
    - action: 'Run SAST'
      type: RUN_DOCKER_CONTAINER
      trigger_condition: VAR_IS
      trigger_variable_value: 'master'
      trigger_variable_key: 'BUDDY_EXECUTION_PULL_REQUEST_BASE_BRANCH'
      docker_image_name: xendit/sast
      docker_image_tag: latest
      integration_hash: 5e85761fc5f225000f97dd99
      region: ap-southeast-1
      inline_commands: run.sh
      volume_mappings:
        - '/:/usr/deploy'
      variables:
        - key: OWNER
          value: 'xenoss'
    - action: 'Send notification to channel'
      type: 'SLACK'
      trigger_time: 'ON_FAILURE'
      content: '$BUDDY_PIPELINE_NAME execution failed. Please check details in Sonarqube'
      blocks: '[{"type":"section","fields":[{"type":"mrkdwn","text":"*Failed execution:* <$BUDDY_EXECUTION_URL|Execution #$BUDDY_EXECUTION_ID $BUDDY_EXECUTION_COMMENT>"},{"type":"mrkdwn","text":"*Pipeline:* <$BUDDY_PIPELINE_URL|$BUDDY_PIPELINE_NAME>"},{"type":"mrkdwn","text":"*Sonar Link:* <https://sonar.tidnex.com/project/issues?id=$BUDDY_PROJECT_NAME&resolved=false&types=VULNERABILITY&severities=BLOCKER|$BUDDY_PROJECT_NAME>"},{"type":"mrkdwn","text":"*Project:* <$BUDDY_PROJECT_URL|$BUDDY_PROJECT_NAME>"}]}]'
      channel: '-'
      trigger_condition: 'ALWAYS'
      integration_hash: '5ea6524a42eba4000eb35fbb'
